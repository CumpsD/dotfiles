#!/usr/bin/env bash

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White

ask() {
    # https://gist.github.com/davejamesmiller/1965569
    local prompt default reply

    if [ "${2:-}" = "Y" ]; then
        prompt="Y/n"
        default=Y
    elif [ "${2:-}" = "N" ]; then
        prompt="y/N"
        default=N
    else
        prompt="y/n"
        default=
    fi

    while true; do

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read reply </dev/tty

        # Default?
        if [ -z "$reply" ]; then
            reply=$default
        fi

        # Check if the reply is valid
        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

has_param() {
    local term="$1"
    shift
    for arg; do
        if [[ $arg == "$term" ]]; then
            return 0
        fi
    done
    return 1
}

echo "Updating dotfiles..."

echo
printf "Executing ${Yellow}git pull${Color_Off}\n"
git pull

echo
printf "Executing ${Yellow}git submodule update${Color_Off}\n"
git submodule update

echo
if ask "Setup dotfiles with dotbot?" Y; then
    printf "Executing ${Yellow}./install base${Color_Off}\n"
    ./install base

    echo
    printf "Executing ${Yellow}sudo ./install sudo${Color_Off}\n"
    sudo ./install sudo
fi

echo
if ask "Setup machine with Ansible?" Y; then
    printf "Executing ${Yellow}pushd ansible > /dev/null${Color_Off}\n"
    pushd ansible > /dev/null

    if has_param '--with-gui' "$@"; then
        printf "Executing ${Yellow}ansible-playbook -K -i inventory system.yml --extra-vars \"gui=true\"${Color_Off}\n"
        ansible-playbook -K -i inventory system.yml --extra-vars "gui=true"
    else
        printf "Executing ${Yellow}ansible-playbook -K -i inventory system.yml${Color_Off}\n"
        ansible-playbook -K -i inventory system.yml
    fi

    printf "Executing ${Yellow}popd > /dev/null${Color_Off}\n"
    popd > /dev/null
fi

if has_param '--with-gui' "$@"; then
    echo
    if ask "Do you want to download all aerial sddm videos?" N; then
        printf "Executing ${Yellow}pushd /usr/share/sddm > /dev/null${Color_Off}\n"
        pushd /usr/share/sddm > /dev/null

        printf "Executing ${Yellow}sudo mkdir -p videos/day${Color_Off}\n"
        sudo mkdir -p videos/day

        printf "Executing ${Yellow}while read -r link; do sudo wget -nc -P videos/day \"\$link\"; done < themes/aerial-sddm-theme/playlists/day.m3u${Color_Off}\n"
        while read -r link; do sudo wget -nc -P videos/day "$link"; done < themes/aerial-sddm-theme/playlists/day.m3u

        printf "Executing ${Yellow}sudo mkdir -p videos/night${Color_Off}\n"
        sudo mkdir -p videos/night

        printf "Executing ${Yellow}while read -r link; do sudo wget -nc -P videos/night \"\$link\"; done < themes/aerial-sddm-theme/playlists/night.m3u${Color_Off}\n"
        while read -r link; do sudo wget -nc -P videos/night "$link"; done < themes/aerial-sddm-theme/playlists/night.m3u

        printf "Executing ${Yellow}popd > /dev/null${Color_Off}\n"
        popd > /dev/null
    fi
fi

echo
if ask "Setup dotfiles with dotbot (again)?" Y; then
    printf "Executing ${Yellow}./install base${Color_Off}\n"
    ./install base

    echo
    printf "Executing ${Yellow}sudo ./install sudo${Color_Off}\n"
    sudo ./install sudo
fi

echo
if ask "Are you running on Arch?" N; then
    printf "Executing ${Yellow}sudo ./install arch${Color_Off}\n"
    sudo ./install arch
fi

echo
if ask "Are you running on Ubuntu?" N; then
    printf "Executing ${Yellow}sudo ./install ubuntu${Color_Off}\n"
    sudo ./install ubuntu
fi

echo
if ask "Are you running on WSL?" N; then
    printf "Executing ${Yellow}sudo ./install wsl${Color_Off}\n"
    sudo ./install wsl

    echo "Setting default console to Solarized Dark..."

    printf "Executing ${Yellow}pushd colortool > /dev/null${Color_Off}\n"
    pushd colortool > /dev/null

    printf "Executing ${Yellow}./colortool.exe -d solarized_dark${Color_Off}\n"
    ./colortool.exe -d solarized_dark

    printf "Executing ${Yellow}popd > /dev/null${Color_Off}\n"
    popd > /dev/null
fi

echo
if ask "Do you want to install .NET Core?" N; then
    printf "Executing ${Yellow}sudo ./install dotnet${Color_Off}\n"
    sudo ./install dotnet
fi

echo
if ask "Do you want to clone all repos?" N; then
    printf "Executing ${Yellow}pushd repos > /dev/null${Color_Off}\n"
    pushd repos > /dev/null

    printf "Executing ${Yellow}/setup.sh${Color_Off}\n"
    ./setup.sh

    printf "Executing ${Yellow}popd > /dev/null${Color_Off}\n"
    popd > /dev/null
fi

echo
echo "Installed new system, it might be wise to re-open the console..."
